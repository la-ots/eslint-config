name: Publish release to NPM and Github Packages

on:
  release:
    types: [published]

env:
  PACKAGE_URL: "la-ots/eslint-config"
  PACKAGE_NAME: eslint-config
  NPM_URL: "https://www.npmjs.com/package/@la-ots/eslint-config"
  GITHUB_URL: "https://github.com/la-ots/eslint-config/packages"
  NODE_VERSION: 16

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: "Setup Node ${{ env.NODE_VERSION }}"
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies and Build
        run: |
          npm ci
          npm pack
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PACKAGE_NAME }}
          path: '*.tgz'
          
  publish-npm:
    name: Release to NPM
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: NPM
      url: ${{ env.NPM_URL }}

    steps:
      - name: Download package
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.PACKAGE_NAME }}

      - name: Setup Node ${{ env.NODE_VERSION }} for NPM
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: Publish to NPM
        if: "!github.event.release.prerelease"
        run: npm publish $(ls *.tgz) --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.LAOTS_NPM_TOKEN }}
          
      - name: Publish to NPM (prerelease)
        if: "github.event.release.prerelease"
        run: npm publish $(ls *.tgz) --access public --tag beta
        env:
          NODE_AUTH_TOKEN: ${{ secrets.LAOTS_NPM_TOKEN }}
          
  publish-gpr:
    name: Release to GitHub Packages
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: GitHub Packages
      url: ${{ env.GITHUB_URL }}

    steps:
      - name: Download package
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.PACKAGE_NAME }}

      - name: Setup Node ${{ env.NODE_VERSION }} for GitHub
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://npm.pkg.github.com'
        
      - name: Publish to GitHub Packages
        if: "!github.event.release.prerelease"
        run: npm publish $(ls *.tgz)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to GitHub Packages (prerelease)
        if: "github.event.release.prerelease"
        run: npm publish $(ls *.tgz) --tag beta
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
